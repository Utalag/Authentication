@page "/Account/Manage/SolutionRoles"
@attribute [Authorize(Roles = "Admin,User")]

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Authentication.Data
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject RoleManager<IdentityRole> RoleManager

@rendermode InteractiveServer
    
<PageTitle>SolutionRoles</PageTitle>
    
    

<h3>SolutionRole</h3>
<p>Zde se budou přiřazovat role k uživatelům.  </p>
<h4>Omezit přístup pro Admina a SuperAdmina</h4>

<h5>Komponenta s testovacími daty</h5>
<hr />



<EditForm FormName="RoleSelector" Model="Model" OnValidSubmit="SaveRoleAsync">

    <DataAnnotationsValidator />
    <ValidationSummary class="text-danger" role="alert" />



    <InputSelect @bind-Value="Model.UserId" class="form-control">
        <option value="">"Vyber uživatele"</option>
        @foreach(var item in users)
        {
            <option value="@item.Id">@item.UserName</option>
        }
    </InputSelect>

        <InputSelect @bind-Value="Model.RoleName" class="form-control">
        <option value="">"Vyber roli"</option>
            @foreach(var item in roles)
            {
                 <option value="@item.Name">@item.Name</option>
            }
        </InputSelect>
    <button type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
</EditForm>


<a href="Account/Manage/SetRoles" class="btn btn-info">Nové role a oprávnění</a>





@code {

    private List<ApplicationUser> users = new();
    private List<IdentityRole> roles = new();

    protected override void OnInitialized()
    {
        users = UserManager.Users.ToList();
        roles = RoleManager.Roles.ToList();
        Model.UserId = string.Empty;
        Model.RoleName = string.Empty;
    }


    private RoleModel Model { get; set; } = new RoleModel();

    private async void SaveRoleAsync()
    {
        var userData = await UserManager.FindByIdAsync(Model.UserId);
        var succeededStatus = await UserManager.AddToRoleAsync(userData,Model.RoleName);
    }

    

    private class RoleModel
    {
        public string? RoleName { get; set; } = " ";
        public string UserId { get; set; } = " ";
        public string UserName { get; set; } = " ";
   }


}
